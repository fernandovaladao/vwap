// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/fernandovaladao/vwap/storage_manager (interfaces: StorageManager)

// Package storage_manager is a generated GoMock package.
package storage_manager

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockStorageManager is a mock of StorageManager interface.
type MockStorageManager struct {
	ctrl     *gomock.Controller
	recorder *MockStorageManagerMockRecorder
}

// MockStorageManagerMockRecorder is the mock recorder for MockStorageManager.
type MockStorageManagerMockRecorder struct {
	mock *MockStorageManager
}

// NewMockStorageManager creates a new mock instance.
func NewMockStorageManager(ctrl *gomock.Controller) *MockStorageManager {
	mock := &MockStorageManager{ctrl: ctrl}
	mock.recorder = &MockStorageManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStorageManager) EXPECT() *MockStorageManagerMockRecorder {
	return m.recorder
}

// GetSum mocks base method.
func (m *MockStorageManager) GetSum() float64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSum")
	ret0, _ := ret[0].(float64)
	return ret0
}

// GetSum indicates an expected call of GetSum.
func (mr *MockStorageManagerMockRecorder) GetSum() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSum", reflect.TypeOf((*MockStorageManager)(nil).GetSum))
}

// Store mocks base method.
func (m *MockStorageManager) Store(arg0 float64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Store", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Store indicates an expected call of Store.
func (mr *MockStorageManagerMockRecorder) Store(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Store", reflect.TypeOf((*MockStorageManager)(nil).Store), arg0)
}
